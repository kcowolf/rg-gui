name: MSBuild

on:
  push:
    tags:
      - "v*"

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{ github.workspace }}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{ github.workspace }}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Compress files
      run: |-
        powershell Compress-Archive ${{ github.workspace }}\rg-gui\bin\Release\net6.0-windows\*.dll,${{ github.workspace }}\rg-gui\bin\Release\net6.0-windows\*.json,${{ github.workspace }}\rg-gui\bin\Release\net6.0-windows\*.config,${{ github.workspace }}\rg-gui\bin\Release\net6.0-windows\*.exe,${{ github.workspace }}\rg-gui\bin\Release\net6.0-windows\runtimes ${{ github.workspace }}\rg-gui-${{ github.ref_name }}.zip

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: rg-gui-${{ github.ref_name }}.zip
